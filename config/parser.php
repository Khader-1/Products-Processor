<?php

/*
|--------------------------------------------------------------------------
| Parser Configuration
|--------------------------------------------------------------------------
|
| This file is used to configure the parser's behavior, including the data
| source, sink (output), and the properties expected in the data.
|
*/

return [

    /*
    |--------------------------------------------------------------------------
    | Data Source
    |--------------------------------------------------------------------------
    |
    | The class responsible for reading the input data. This class must
    | implement the `ProductSource` contract to ensure it can provide
    | the required data to the parser.
    |
    */
    'source' => App\CSV\CSVProductSource::class,

    /*
    |--------------------------------------------------------------------------
    | Data Sink
    |--------------------------------------------------------------------------
    |
    | The class responsible for writing the output data. This class must
    | implement the `CombinationsConsumer` contract to handle the output
    | generated by the parser.
    |
    */
    'sink' => App\CSV\CSVCombinationsConsumer::class,

    /*
    |--------------------------------------------------------------------------
    | Data Properties
    |--------------------------------------------------------------------------
    |
    | Define the properties that are expected in the input data. Each property
    | specifies its type and whether it is required. This allows the parser
    | to validate the input data and ensure it meets the expected format.
    |
    */
    'properties' => [
        'brand_name' => [
            'type' => 'string',
            'required' => true,
        ],
        'model_name' => [
            'type' => 'string',
            'required' => true,
        ],
        'condition_name' => [
            'type' => 'string',
        ],
        'grade_name' => [
            'type' => 'string',
        ],
        'gb_spec_name' => [
            'type' => 'string',
        ],
        'colour_name' => [
            'type' => 'string',
        ],
        'network_name' => [
            'type' => 'string',
        ],
    ],
];
